name: Test the rust code

on:
  pull_request:

jobs:
  full_ci:
    strategy:
      matrix:
        toolchain: [ 'stable', 'nightly' ]
        rust-host: [aarch64-linux-android, aarch64-unknown-linux-gnu, aarch64-unknown-linux-musl, arm-linux-androideabi, arm-unknown-linux-gnueabi, arm-unknown-linux-gnueabihf, armv7-linux-androideabi, armv7-unknown-linux-gnueabihf, i686-apple-darwin, i686-linux-android, i686-pc-windows-gnu, i686-pc-windows-msvc, i686-unknown-linux-gnu, mips-unknown-linux-gnu, mips64-unknown-linux-gnuabi64, mips64el-unknown-linux-gnuabi64, mipsel-unknown-linux-gnu, powerpc-unknown-linux-gnu, powerpc64-unknown-linux-gnu, powerpc64le-unknown-linux-gnu, s390x-unknown-linux-gnu, x86_64-apple-darwin, x86_64-linux-android, x86_64-pc-windows-gnu, x86_64-pc-windows-msvc, x86_64-unknown-freebsd x86_64-unknown-illumos, x86_64-unknown-linux-gnu, x86_64-unknown-linux-musl, x86_64-unknown-netbsd]
        os: [ubuntu-22.04, ubuntu-20.04,macos-12, macos-11, windows-2022, macos-2019]
    runs-on: ${{ matrix.os }}
    steps:
      - name: checkout
        uses: actions/checkout@v2
      - name: Install latest nightly
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.toolchain }}
          override: true
          target: ${{ matrix.target }}
          components: rustfmt, clippy
      - name: Run rust tests
        run: cargo test
